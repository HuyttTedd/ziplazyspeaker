<?php

use Mageplaza\LazySpeaker\Block\ProcessForm;

/** @var ProcessForm $block */
$packId = $block->getRequest()->getParam('package');
$langsForWords = $block->getAllLanguagesForWords($packId);

$writer = new \Zend\Log\Writer\Stream(BP . '/var/log/test.log');
$logger = new \Zend\Log\Logger();
$logger->addWriter($writer);
$logger->info($langsForWords);
?>

<div class="row">
    <div class="col-4">
        <form name="addData" method="post" id="addData" class="form" action="<?= $block->getPackageFormAction(); ?>"
              data-hasrequired="<?= $block->escapeHtmlAttr(__('* Required Fields')) ?>"
              data-mage-init='{"validation":{}}' enctype="multipart/form-data">
            <input name="form_key" type="hidden" value="<?php echo $block->getFormKey(); ?>">
            <fieldset class="fieldset">
                <legend class="legend">
                    <span><?= $block->escapeHtmlAttr(__('Edit Package')) ?></span>
                </legend>
                <fieldset class="fieldset row">
                    <div class="fields col-4 bg-primary">
                        <div class="field name required">
                            <label class="label" for="title"><span><?= $block->escapeHtmlAttr(__('Name of Package')) ?></span></label>
                            <div class="control">
                                <input name="package_name" id="package" title="Package Name" class="input-text" type="text" data-validate="{required:true}" value="<?= $block->helperData->getPackageData($packId)->getName() ?>">
                            </div>
                            <div class="control">
                                <input name="package_id" id="package-id" title="Package ID" class="input-text" type="hidden" data-validate="{required:true}" value="<?= $block->helperData->getPackageData($packId)->getId() ?>">
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="ids" id="id-selected">
                </fieldset>
            </fieldset>
            <fieldset class="fieldset">
                <legend class="legend">
                    <span><?= $block->escapeHtmlAttr(__('In Package')) ?></span>
                </legend>
            </fieldset>

            <button id="removeWord"><?= $block->escapeHtmlAttr(__('Remove From Package')) ?></button>
            <br>
            <div class="container">
                <table id="belong_words" class="display cell-border" style="width:100%">
                    <thead>
                    <tr>
                        <th><input id='exampleSelectAll' type="checkbox"></th>
                        <th>Vị trí</th>
                        <th></th>
                        <th>Từ</th>
                    </tr>
                    </thead>

                    <tbody id="all-words-belong">
                    </tbody>

                    <tfoot>
                    <tr>
                        <th></th>
                        <th>Vị trí</th>
                        <th></th>
                        <th>Từ</th>
                    </tr>
                    </tfoot>
                </table>
            </div>
            <div id="read-conditions">
                <button id="read">Đọc từ</button>
                <div id="conditions">
                    <table>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="word" name="condition"></td>
                            <td>Đọc từ chính</td>
                            <td>
                                <select id="lang-word" class="lang"></select>
                            </td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="spelling" name="condition"></td>
                            <td>Hiển thị phiên âm</td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="word_class" name="condition"></td>
                            <td>Đọc từ loại</td>
                            <td>
                                <select id="lang-word_class" class="lang"></select>
                            </td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="meaning" name="condition"></td>
                            <td>Đọc nghĩa</td>
                            <td>
                                <select id="lang-meaning" class="lang"></select>
                            </td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="sentence_example" name="condition"></td>
                            <td>Đọc câu ví dụ</td>
                            <td>
                                <select id="lang-sentence_example" class="lang"></select>
                            </td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="sentence_meaning" name="condition"></td>
                            <td>Đọc nghĩa câu ví dụ</td>
                            <td>
                                <select id="lang-sentence_meaning" class="lang"></select>
                            </td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" class="read-option" value="note" name="condition"></td>
                            <td>Đọc note</td>
                            <td>
                                <select id="lang-note" class="lang"></select>
                            </td>
                        </tr>
                    </table>
                    <button id="confirm_read">Xác nhận đọc</button>
                    <button id="save-language">Lưu ngôn ngữ</button>

                </div>
            </div>

            <br>
            <fieldset class="fieldset">
                <legend class="legend">
                    <span><?= $block->escapeHtmlAttr(__('Not in Package')) ?></span>
                </legend>
            </fieldset>
                <button id="addWord"><?= $block->escapeHtmlAttr(__('Add To Package')) ?></button>
            <br>
            <div class="container">
                <table id="not_belong_words" class="display cell-border" style="width:100%">
                    <thead>
                    <tr>
                        <th><input id='exampleSelectAllNotBelong' type="checkbox"></th>
                        <th>Vị trí</th>
                        <th></th>
                        <th>Từ</th>
                    </tr>
                    </thead>

                    <tbody id="all-words-not-belong">
                    </tbody>

                    <tfoot>
                    <tr>
                        <th></th>
                        <th>Vị trí</th>
                        <th></th>
                        <th>Từ</th>
                    </tr>
                    </tfoot>
                </table>
            </div>
            <div class="actions-toolbar">
                <div class="primary">
                    <button id="submit" type="submit" class="action submit primary" title="Save"><span><?= $block->escapeHtmlAttr(__('Save')) ?></span></button>
                </div>
                <div class="primary">
                    <button id="last-submit"><span><?= $block->escapeHtmlAttr(__('Save')) ?></span></button>
                </div>
            </div>
        </form>
    </div>
</div>
<style>
    select.custom-select {
        width: 50px !important;
    }

    #read-conditions {
        margin-top: 2rem;
        margin-bottom: 2rem;
    }

    #last-submit {
        display: none;
    }

    #conditions {
        display: none;
    }
</style>

<script>
    require([
        'jquery',
        'mage/url',
        'sweetalert2',
        'responsivevoice',
        'datatables',
        'datatables_select',
        'datatables_rowreorder'
    ], function($, url, Swal) {
        $(document).ready(function() {
            //load Ajax
            var table;
            var arrLang;
            var allFields = [
                "lang-word",
                "lang-word_class",
                "lang-meaning",
                "lang-sentence_example",
                "lang-sentence_meaning",
                "lang-note"
            ];
            //setLanguage from package data
            var langOfPackage = <?= $langsForWords ?>;
            $('#delete-row').prop('disabled', true);
            $('#edit-row').prop('disabled', true);
            //check all option
            $('.read-option').prop('checked', true);
            var idSelected = [];
            var belongWords, tableBelong, tableNotBelong, wordsToRead, arrRead;
            //get all list voice
            var voicelist = responsiveVoice.getVoices();
            $.each(voicelist, function() {
                $('.lang').append($("<option ></option>").val(this.name).text(this.name));
            });
            $.map(langOfPackage, function (item) {
                console.log(item);
                $("#"+ item['item'] + " option[value='"+ item['lang'] +"']").prop('selected', true);
            });

            function getRowsTable(item) {
                return "<tr><th></th>" +
                    "<td>" + item['word_position'] + "</td>" +
                    "<td>" + item['id'] + "</td>" +
                    "<td style='word-break:break-all;white-space:normal;'>" + item['word'] + "</td>" +
                    "</tr>";
            }

            function createTable(tableId) {
                return $("#" + tableId).DataTable({
                    "lengthMenu": [[5, 10, 15, 20, -1], [5, 10, 15, 20, "All"]],
                    responsive: true,
                    order: [
                        [1, 'asc']
                    ],
                    columnDefs: [
                        //Added to set class name for reordering ability
                        {targets: [1, 3], className: 'reorder'},
                        {"width": "5%", "targets": 0},
                        {"width": "10%", "targets": 1},
                        {"width": "60%", "targets": 3},
                        {"orderable": false, "targets": [0, 3]},
                        {orderable: true, className: 'select-checkbox', targets: 0},
                        {"targets": [2], "visible": false, "searchable": false}
                    ],
                    select: {
                        style: 'multi',
                    },
                    rowReorder: {
                        selector: '.reorder',
                        dataSrc: 1
                    }
                });
            }

            function tableFunction(table, idSelectAll) {
                $("#"+idSelectAll).on("click", function(e) {
                    if ($(this).is(":checked")) {
                        table.rows({
                            page: 'current'
                        }).select();
                    } else {
                        table.rows().deselect();
                    }
                });
            }

            function showPopupIfNotSelect() {
                return Swal.fire('No words have been selected yet!');
            }

            $.ajax({
                url: "<?= $block->getUrl('lazyspeaker/index/loadwords'); ?>",
                type: 'POST',
                data: {
                    "edit_word": true,
                    'pack':<?= $packId ?>
                },
                success: function(data) {
                    var belongHtml = '';
                    $.map(data.belong, function(item) {
                        belongHtml += getRowsTable(item);
                    });
                    $("#all-words-belong").html(belongHtml);
                    tableBelong = createTable("belong_words");
                    tableFunction(tableBelong, "exampleSelectAll");
                    var notBelongHtml = '';
                    $.map(data.notBelong, function(item) {
                        notBelongHtml += getRowsTable(item);
                    });
                    $("#all-words-not-belong").html(notBelongHtml);
                    tableNotBelong = createTable("not_belong_words");
                    tableFunction(tableNotBelong, "exampleSelectAllNotBelong");

                    //addWord and removeWord
                    $("#addWord").on("click", function(e) {
                        e.preventDefault();
                        if(tableNotBelong.rows({selected: true}).count() < 1) {
                            showPopupIfNotSelect();
                        } else {
                            var addWord = tableNotBelong.rows({selected: true}).data();
                            tableNotBelong.rows({selected: true}).remove().draw();
                            $.map(addWord, function (item) {
                                tableBelong.row.add(item).draw();
                            });
                        }
                    });
                    $("#removeWord").on("click", function(e) {
                        e.preventDefault();
                        if(tableBelong.rows({selected: true}).count() < 1) {
                            showPopupIfNotSelect();
                        } else {
                            var removeWord = tableBelong.rows({selected: true}).data();
                            tableBelong.rows({selected: true}).remove().draw();
                            $.map(removeWord, function (item) {
                                tableNotBelong.row.add(item).draw();
                            });
                        }
                    });
                    $("#submit").on("click", function(e) {
                        e.preventDefault();
                        belongWords = tableBelong.rows().data();
                        $.map(belongWords, function (item) {
                            idSelected.push(item[2]);
                        });
                        $("#id-selected").val(idSelected.join());
                        $("#last-submit").click();
                    });
                },
                error: function(error) {
                    //xu ly loi
                }
            });
            //load Ajax

            $("#read").on("click", function(e) {
                e.preventDefault();
                $("#conditions").toggle(300);
            });

            //confirm Read
            function getLang(selectedValues) {
                let pairWordvsLang = [];
                $.map(selectedValues.split(','), function (item) {
                    if(item !== "spelling") {
                        pairWordvsLang.push([item, $('#lang-'+item).val()]);
                    }
                });
                return pairWordvsLang;
            }

            $("#save-language").on("click", function (e) {
                let langSelected;
                let allLangsToRead = [];

                e.preventDefault();
                $.map(allFields, function (item) {
                    langSelected = $('#' + item).find(":selected").val();
                    allLangsToRead.push({item: item, lang: langSelected});
                });
                $.ajax({
                    url: "<?= $block->getUrl('lazyspeaker/index/savelanguage'); ?>",
                    type: 'POST',
                    data: {'lang_data': allLangsToRead, 'pack':<?= $packId ?>},
                    success: function (data) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Lưu thành công!'
                        });
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Có lỗi xảy ra. Xin vui lòng thử lại!'
                        });
                    }
                });
            });

            $("#confirm_read").on("click", function(e) {
                e.preventDefault();
                const selectedValues = $('input[name="condition"]:checked').map( function () {
                    return $(this).val();
                }).get().join();
                arrLang = getLang(selectedValues);
                arrRead = [];
                wordsToRead = tableBelong.rows().data();
                $.map(wordsToRead, function (item) {
                    arrRead.push(item);
                });
                $.ajax({
                    url: "<?= $block->getUrl('lazyspeaker/index/setdatatoread'); ?>",
                    type: 'POST',
                    data: {'word_data': arrRead,
                            'selected_value': selectedValues,
                            'lang' : arrLang},
                    success: function (data) {
                        if(!data) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Có lỗi xảy ra. Xin vui lòng thử lại!'
                            });
                        } else {
                            window.location.href = url.build("lazyspeaker/index/readword");
                        }
                    },
                    error: function (error) {
                        //xu ly neu khong redirect dc
                    }
                });
            });
        });
    });
</script>
