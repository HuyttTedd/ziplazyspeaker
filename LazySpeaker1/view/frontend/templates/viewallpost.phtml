<?php
use Mageplaza\LazySpeaker\Block\ProcessForm;
/** @var ProcessForm $block */
$block->helperData->getPostsData();
?>

<div class="row">
    <div class="col-4">
        <fieldset class="fieldset">
            <legend class="legend">
                <span><?= $block->escapeHtmlAttr(__('View All Packages')) ?></span>
            </legend>
            <fieldset class="fieldset row">
                <div class="fields col-4 bg-primary">
                    <div class="field name required">
                        <div class="control">
                            <button class="button btn-primary" id="delete-row">Delete</button>
                            <button class="button btn-primary" id="edit-row">Edit</button>
                            <button class="button btn-primary" id="create-post">Create a post with selected package</button>
                        </div>
                    </div>
                </div>
            </fieldset>
        </fieldset>
    </div>
</div>

<div class="container">
    <table id="example" class="display cell-border" style="width:100%">
        <thead>
        <tr>
            <th><input id='exampleSelectAll' type="checkbox"></th>
            <th>Vị trí</th>
            <th></th>
            <th>Gói từ</th>
            <th>Số từ</th>
        </tr>
        </thead>

        <tbody id="all-words">
        </tbody>

        <tfoot>
        <tr>
            <th></th>
            <th>Vị trí</th>
            <th></th>
            <th>Gói từ</th>
            <th>Số từ</th>
        </tr>
        </tfoot>
    </table>
</div>

<style>
    select.custom-select {
        width: 50px !important;
    }
</style>

<script>
    require([
        'jquery',
        'mage/url',
        'sweetalert2',
        'datatables',
        'datatables_select'
    ], function($, url, Swal){
        $(document).ready( function () {

            //load Ajax
            var ajaxUrl = url.build('loadpackages');
            var ajaxUrlDelete = url.build('delete');
            var dataAjax = 'getAll';
            var tableHtml = '';
            var table;
            $('#delete-row').prop('disabled', true);
            $('#edit-row').prop('disabled', true);
            var idSelected = [];

            function getRowsTable(item) {
                return "<tr><th></th>" +
                    "<td>"+item['package_position']+"</td>" +
                    "<td>"+item['id']+"</td>" +
                    "<td style='word-break:break-all;white-space:normal;'>"+item['name']+"</td>" +
                    "<td style='white-space:normal;'>"+item['count_word']+"</td>" +
                    "</tr>";
            }

            function createTable() {
                return $('#example').DataTable({
                    "lengthMenu": [[5, 10, 15, 20, -1], [5, 10, 15, 20, "All"]],
                    responsive: true,
                    order: [[1, 'asc']],
                    columnDefs: [
                        //Added to set class name for reordering ability
                        {targets: [1,3], className: 'reorder'},
                        { "width": "5%", "targets": 0 },
                        { "width": "10%", "targets": 1 },
                        { "width": "60%", "targets": 3 },
                        { "orderable": false, "targets": [0, 3, 4] },
                        {
                            orderable: true,
                            className: 'select-checkbox',
                            targets: 0
                        },
                        {
                            "targets": [ 2 ],
                            "visible": false,
                            "searchable": false
                        }
                    ],
                    select: {
                        style: 'multi',
                    },
                    rowReorder: {
                        //Changed selecotr to the reorder class anme
                        selector: '.reorder',
                        //Set dataSrc to the column containing the reorder sequence number
                        dataSrc: 1
                    }
                });
            }

            function tableFunction(table) {
                $("#exampleSelectAll").on( "click", function(e) {
                    if ($(this).is( ":checked" )) {
                        table.rows({page: 'current'}).select();
                    } else {
                        table.rows().deselect();
                    }
                });

                table.on('select', function (e, dt, type, indexes) {
                    idSelected = [];
                    var rowsSelected = dt.rows({selected: true}).data();
                    $.map(rowsSelected, function (item) {
                        idSelected.push(item[2]);
                    });
                    var count = dt.rows({selected: true}).count();
                    if(count > 0) {
                        $('#delete-row').prop('disabled', false);
                    }
                    if(count == 1) {
                        $('#edit-row').prop('disabled', false);
                    }
                    if(count > 1 || count < 1) {
                        $('#edit-row').prop('disabled', true);
                    }
                });

                table.on('deselect', function (e, dt, type, indexes) {
                    idSelected = [];
                    var rowsSelected = dt.rows({selected: true}).data();
                    $.map(rowsSelected, function (item) {
                        idSelected.push(item[2]);
                    });
                    var count = dt.rows({selected: true}).count();
                    if(count < 1) {
                        $('#delete-row').prop('disabled', true);
                    }
                    if(count == 1) {
                        $('#edit-row').prop('disabled', false);
                    }
                    if(count > 1 || count < 1) {
                        $('#edit-row').prop('disabled', true);
                    }
                });
            }

            $.ajax({
                url: "<?= $block->getUrl('lazyspeaker/index/loadpackages'); ?>",
                type: 'POST',
                data: dataAjax,
                success: function (data) {
                    $.map(data.items, function (item) {
                        tableHtml += getRowsTable(item);
                    });
                    $("#all-words").html(tableHtml);
                    table = createTable();
                    tableFunction(table);
                    //edit row click
                    $("#edit-row").on( "click", function(e) {
                        rowsEdit = table.row({selected: true}).data()[2];
                        window.location.href = url.build("lazyspeaker/index/editpackage/package/" + rowsEdit);
                    });
                },
                error: function (error) {
                    console.log(JSON.stringify(error));
                }
            });
            //load Ajax

            //create post
            $("#create-post").on( "click", function(e) {
                $.ajax({
                    url: "<?= $block->getUrl('lazyspeaker/index/loadwords'); ?>",
                    type: 'POST',
                    data: {'create_post': idSelected},
                    success: function () {
                        window.location.href = url.build("lazyspeaker/index/createpost/");
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong. Please try again!'
                        });
                    }
                });
            });
            //create post


            //sweetAlert button Delete //delete row click
            $("#delete-row").on( "click", function(e) {
                Swal.fire({
                    title: "Are you sure about deleting selected records?",
                    type: "info",
                    width: 400,
                    showCancelButton: true,
                    confirmButtonText: "Yes, Delete",
                    confirmButtonColor: "#ff0055",
                    cancelButtonColor: "#999999",
                    reverseButtons: true,
                    focusConfirm: false,
                    focusCancel: true
                }).then(function(isConfirm) {
                    if (isConfirm.isConfirmed) {
                        Swal.fire({
                            title: 'Please Wait!',
                            html: 'deleting...',// add html attribute if you want or remove
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            allowEscapeKey: false,
                            allowEnterKey: false,
                            onBeforeOpen: () => {
                                Swal.showLoading()
                            },
                        });
                        $.ajax({
                            url: "<?= $block->getUrl('lazyspeaker/index/delete'); ?>",
                            type: 'POST',
                            data: {'delete_package': idSelected},
                            success: function () {
                                table.rows({selected: true}).remove().draw();
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Delete Successfully!'
                                });
                            },
                            error: function (error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Something went wrong. Please try again!'
                                });
                            }
                        });
                    }
                });
            });


        });
    });
</script>

